/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.ConnectDB;
import DAO.nuocUongDAO;
import DAO.loaiNuocDAO;
import POJO.nuocUong;
import java.awt.Dimension;
import java.awt.Graphics;
import javax.swing.ImageIcon;
import POJO.loaiNuoc;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import model.hoTro;

/**
 *
 * @author Duong Duy
 */
public class ThemNuoc extends javax.swing.JFrame {

    /**
     * Creates new form quanLyCTKMKH
     */
    String tentk = "";
    ArrayList<loaiNuoc> dsLoaiNuoc;
    DefaultTableModel modelTBNuoc;
    Vector titleNuoc = new Vector();
    ArrayList<nuocUong> dsNuoc;
    DefaultTreeModel modelTree;
    DefaultMutableTreeNode root = null;

    public ThemNuoc(String tentk) {
        this.tentk = tentk;
        initComponents();
        setLocationRelativeTo(null);
        txtMaloai.requestFocus();
        titleNuoc.add("Mã nước");
        titleNuoc.add("Tên nước");
        titleNuoc.add("Tên loại nước");
        titleNuoc.add("Đơn giá");
        modelTBNuoc = new DefaultTableModel();
        modelTBNuoc.setColumnIdentifiers(titleNuoc);
        tbNuoc.setModel(modelTBNuoc);
        root = (DefaultMutableTreeNode) treeLoaiNuoc.getModel().getRoot();
        modelTree = (DefaultTreeModel) treeLoaiNuoc.getModel();
        treeLoaiNuoc.setModel(modelTree);
        loadDataLoaiNuoc();

        loadDataNuoc();
        treeLoaiNuoc.expandRow(0);
    }

    void loadDataNuoc() {
        modelTBNuoc.setRowCount(0);
        dsNuoc = nuocUongDAO.getdsNuocUong();
        for (nuocUong n : dsNuoc) {
            Vector r = new Vector();
            r.add(n.getMaNuoc());
            r.add(n.getTenNuoc());
            r.add(loaiNuocDAO.timLoaiNuoc(n.getMaLoaiNuoc()).getTenLoaiNuoc());
            r.add(n.getDonGia());
            modelTBNuoc.addRow(r);
        }
    }

    void xoaTrangLN() {
        txtMaloai.setEditable(true);
        txtMaloai.setText("");
        txtMaloai.requestFocus();
        txtGia.setText("");
        txtTenLoai.setText("");
        txtMaloai.requestFocus();
        btnThem.setEnabled(true);
    }

    void loadDataLoaiNuoc() {
        cbbTenLoaiNuoc.removeAllItems();
        while (root.getChildCount() != 0) {
            root.remove(root.getChildCount() - 1);
        }
        dsLoaiNuoc = loaiNuocDAO.getdsLoaiNuoc();
        for (loaiNuoc ln : dsLoaiNuoc) {
            cbbTenLoaiNuoc.addItem(ln.getTenLoaiNuoc());
            DefaultMutableTreeNode parent = new DefaultMutableTreeNode(ln);
            root.add(parent);
        }
        modelTree.reload(root);
        for (int i = 0; i < treeLoaiNuoc.getRowCount(); i++) {
            treeLoaiNuoc.expandRow(i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel(){
            ImageIcon icon = new ImageIcon("src//img//cafehat.jpg");
            public void paintComponent(Graphics g){
                Dimension d = getSize();
                g.drawImage(icon.getImage(), 0, 0, d.width, d.height, null);
                setOpaque(false);
                super.paintComponent(g);
            }
        }
        ;
        jLabel13 = new javax.swing.JLabel();
        txtTenNuoc = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtMaNuoc = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        cbbTenLoaiNuoc = new javax.swing.JComboBox<>();
        btnThemNuoc = new javax.swing.JButton();
        btnXoaNuoc = new javax.swing.JButton();
        btnSuaNuoc = new javax.swing.JButton();
        btnLamMoiNuoc = new javax.swing.JButton();
        btnDongNuoc = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbNuoc = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtMaloai = new javax.swing.JTextField();
        txtTenLoai = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeLoaiNuoc = new javax.swing.JTree();
        txtGia = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý món nước");
        setResizable(false);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 0));
        jLabel13.setText("Mã nước");

        txtTenNuoc.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtTenNuoc.setName("Tên nước"); // NOI18N
        txtTenNuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenNuocActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 0));
        jLabel14.setText("Tên nước");

        txtMaNuoc.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtMaNuoc.setName("Mã nước"); // NOI18N
        txtMaNuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNuocActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 0));
        jLabel18.setText("Tên loại nước");

        cbbTenLoaiNuoc.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        btnThemNuoc.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnThemNuoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        btnThemNuoc.setText("Thêm");
        btnThemNuoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThemNuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemNuocActionPerformed(evt);
            }
        });

        btnXoaNuoc.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnXoaNuoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btnXoaNuoc.setText("Xoá");
        btnXoaNuoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoaNuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaNuocActionPerformed(evt);
            }
        });

        btnSuaNuoc.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnSuaNuoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hammer.png"))); // NOI18N
        btnSuaNuoc.setText("Sửa");
        btnSuaNuoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSuaNuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaNuocActionPerformed(evt);
            }
        });

        btnLamMoiNuoc.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnLamMoiNuoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh.png"))); // NOI18N
        btnLamMoiNuoc.setText("Làm mới");
        btnLamMoiNuoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLamMoiNuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiNuocActionPerformed(evt);
            }
        });

        btnDongNuoc.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnDongNuoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close.png"))); // NOI18N
        btnDongNuoc.setText("Đóng");
        btnDongNuoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDongNuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDongNuocActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 0));
        jLabel6.setText("Giá");

        tbNuoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbNuoc.setName(""); // NOI18N
        tbNuoc.setOpaque(false);
        tbNuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbNuocMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tbNuoc);

        btnThem.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hammer.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnLamMoi.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh.png"))); // NOI18N
        btnLamMoi.setText("LÀM MỚI");
        btnLamMoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 255, 255));
        jLabel2.setText("Mã loại");

        txtMaloai.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtMaloai.setName("Mã loại nước"); // NOI18N

        txtTenLoai.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtTenLoai.setName("Tên loại nước"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 255, 255));
        jLabel3.setText("Tên loại");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Danh sách loại nước");
        treeLoaiNuoc.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        treeLoaiNuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                treeLoaiNuocMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(treeLoaiNuoc);

        txtGia.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtGia.setName("Giá"); // NOI18N
        txtGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGiaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaloai, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnXoa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSua))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnThem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLamMoi)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnThemNuoc)
                                .addGap(102, 102, 102)
                                .addComponent(btnLamMoiNuoc)
                                .addGap(88, 88, 88)
                                .addComponent(btnXoaNuoc)
                                .addGap(93, 93, 93)
                                .addComponent(btnSuaNuoc)
                                .addGap(87, 87, 87)
                                .addComponent(btnDongNuoc))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTenNuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaNuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel18))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbbTenLoaiNuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnLamMoi, btnSua, btnThem, btnXoa});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel13, jLabel14, jLabel18, jLabel6});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbbTenLoaiNuoc, txtGia, txtMaNuoc, txtTenNuoc});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDongNuoc, btnLamMoiNuoc, btnSuaNuoc, btnThemNuoc, btnXoaNuoc});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMaloai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnLamMoi))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnXoa)
                            .addComponent(btnSua))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtMaNuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtTenNuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(cbbTenLoaiNuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDongNuoc)
                        .addComponent(btnSuaNuoc))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnThemNuoc)
                        .addComponent(btnLamMoiNuoc)
                        .addComponent(btnXoaNuoc)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        xoaTrangLN();
        xoaTrangNuoc();
        loadDataLoaiNuoc();
        loadDataNuoc();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if (hoTro.ktraRong(txtMaloai) || hoTro.ktraRong(txtTenLoai)) {
            return;
        }
        String maLoai = txtMaloai.getText().trim();
        String tenLoai = txtTenLoai.getText().trim();
        if (JOptionPane.showConfirmDialog(null, "Bạn muốn thêm loại nước " + tenLoai + " ?", "Thông báo", JOptionPane.YES_NO_OPTION, 1) == JOptionPane.YES_OPTION) {
            int i = loaiNuocDAO.themLN(maLoai, tenLoai);
            if (i != -1) {
                JOptionPane.showMessageDialog(null, "Thêm thành công", "Thông báo", 1);
                xoaTrangLN();
                loadDataLoaiNuoc();
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:      
        if (treeLoaiNuoc.getSelectionPath() != null) {
            DefaultMutableTreeNode selectNode = (DefaultMutableTreeNode) treeLoaiNuoc.getLastSelectedPathComponent();
            if (selectNode.getUserObject() instanceof loaiNuoc) {
                if (JOptionPane.showConfirmDialog(null, "Bạn muốn xoá loại nước " + txtTenLoai.getText().trim(), "Thông báo", JOptionPane.YES_NO_OPTION, 1) == JOptionPane.YES_OPTION) {
                    int i = loaiNuocDAO.xoaLN(txtMaloai.getText());
                    if (i != -1) {
                        JOptionPane.showMessageDialog(null, "Đã xoá", "Thông báo", 1);
                        loadDataLoaiNuoc();
                        loadDataNuoc();
                        xoaTrangLN();
                        xoaTrangNuoc();
                    } else {
                        JOptionPane.showMessageDialog(null, "Lỗi không xoá được loại nước này", "Thông báo", 1);
                    }
                }
            } else {
                if (JOptionPane.showConfirmDialog(null, "Bạn muốn xoá tất cả loại nước", "Thông báo", JOptionPane.YES_NO_OPTION, 1) == JOptionPane.YES_OPTION) {
                    int i = loaiNuocDAO.xoaLN();
                    if (i != -1) {
                        JOptionPane.showMessageDialog(null, "Đã xoá", "Thông báo", 1);
                        loadDataNuoc();
                        loadDataLoaiNuoc();
                    } else {
                        JOptionPane.showMessageDialog(null, "Không thể xoá!!", "Thông báo", 1);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Mời bạn chọn loại nước để xoá", "Thông báo", 1);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:       
        if (treeLoaiNuoc.getSelectionPath() != null) {
            if (hoTro.ktraRong(txtTenLoai)) {
                return;
            }
            if (JOptionPane.showConfirmDialog(null, "Bạn muốn xoá loại nước này", "Thông báo", JOptionPane.YES_NO_OPTION, 1) == JOptionPane.YES_OPTION) {

                int i = loaiNuocDAO.updateLN(txtMaloai.getText(), txtTenLoai.getText().trim());
                if (i != -1) {
                    JOptionPane.showMessageDialog(null, "Đã sửa", "Thông báo", 1);
                    loadDataLoaiNuoc();
                    xoaTrangLN();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Mời bạn chọn loại nước để sửa", "Thông báo", 1);
        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void txtMaNuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNuocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNuocActionPerformed

    private void btnThemNuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNuocActionPerformed
        // TODO add your handling code here:
        if (hoTro.ktraRong(txtMaNuoc) || hoTro.ktraRong(txtTenNuoc) || hoTro.ktraRong(txtGia)) {
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "Bạn muốn thêm nước " + txtTenNuoc.getText().trim(), "Thông báo", JOptionPane.YES_NO_OPTION, 1) == JOptionPane.YES_OPTION) {

            int i = nuocUongDAO.themNuocUong(txtMaNuoc.getText().trim(), txtTenNuoc.getText().trim(), loaiNuocDAO.timLoaiNuoc(cbbTenLoaiNuoc.getSelectedItem().toString()).getMaLoaiNuoc(), Float.parseFloat(txtGia.getText().trim()));
            if (i != -1) {
                JOptionPane.showMessageDialog(null, "Thêm thành công", "Thông báo", 1);
                loadDataNuoc();
                xoaTrangNuoc();
                loadDataLoaiNuoc();
                xoaTrangLN();
            }
        }
    }//GEN-LAST:event_btnThemNuocActionPerformed

    private void btnXoaNuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaNuocActionPerformed
        // TODO add your handling code here:
        int row = tbNuoc.getSelectedRow();
        if (row >= 0) {
            if (JOptionPane.showConfirmDialog(null, "Bạn muốn xoa nước " + txtTenNuoc.getText().trim(), "Thông báo", JOptionPane.YES_NO_OPTION, 1) == JOptionPane.YES_OPTION) {
                int i = nuocUongDAO.xoaNuocUong(txtMaNuoc.getText());
                if (i != -1) {
                    JOptionPane.showMessageDialog(null, "Đã xoá", "Thông báo", 1);
                    loadDataNuoc();
                    xoaTrangNuoc();
                    loadDataLoaiNuoc();
                } else {
                    JOptionPane.showMessageDialog(null, "Không thể xoá nước uống này!!", "Thông báo", 1);
                }
            }
        }
    }//GEN-LAST:event_btnXoaNuocActionPerformed
    void viewNuoc(String maLoai, String maNuoc) {
        txtMaNuoc.setEditable(false);
        nuocUong n = nuocUongDAO.layTTNuoc(maLoai, maNuoc);
        txtMaNuoc.setText(n.getMaNuoc());
        txtTenNuoc.setText(n.getTenNuoc());
        txtGia.setText(n.getDonGia() + "");
        cbbTenLoaiNuoc.setSelectedItem(loaiNuocDAO.timLoaiNuoc(n.getMaLoaiNuoc()).getTenLoaiNuoc().trim());
        btnThemNuoc.setEnabled(false);
    }
    private void tbNuocMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNuocMousePressed
        // TODO add your handling code here:
        int row = tbNuoc.getSelectedRow();
        if (row >= 0) {
            viewNuoc(loaiNuocDAO.timLoaiNuoc(modelTBNuoc.getValueAt(row, 2).toString()).getMaLoaiNuoc(), modelTBNuoc.getValueAt(row, 0).toString());
        }
    }//GEN-LAST:event_tbNuocMousePressed

    private void btnLamMoiNuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiNuocActionPerformed
        // TODO add your handling code here:
        xoaTrangNuoc();
        tbNuoc.setSelectionMode(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnLamMoiNuocActionPerformed

    private void btnSuaNuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaNuocActionPerformed
        // TODO add your handling code here:
        int row = tbNuoc.getSelectedRow();
        if (row >= 0) {
            if (JOptionPane.showConfirmDialog(null, "Bạn muốn sửa nước " + txtTenNuoc.getText().trim(), "Thông báo", JOptionPane.YES_NO_OPTION, 1) == JOptionPane.YES_OPTION) {

                int i = nuocUongDAO.updateNuocUong(txtMaNuoc.getText(), txtTenNuoc.getText().trim(), loaiNuocDAO.timLoaiNuoc(cbbTenLoaiNuoc.getSelectedItem().toString()).getMaLoaiNuoc(), Float.parseFloat(txtGia.getText().trim()));
                if (i != -1) {
                    JOptionPane.showMessageDialog(null, "Đã sửa", "Thông báo", 1);
                    loadDataNuoc();
                    xoaTrangNuoc();
                    loadDataLoaiNuoc();
                }
            }
        }
    }//GEN-LAST:event_btnSuaNuocActionPerformed

    private void btnDongNuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDongNuocActionPerformed
        // TODO add your handling code here:
        new quanly(tentk).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnDongNuocActionPerformed

    private void txtTenNuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenNuocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenNuocActionPerformed

    private void treeLoaiNuocMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeLoaiNuocMousePressed
        // TODO add your handling code here:
        if (root.getChildCount() == 0 || treeLoaiNuoc.getSelectionPath() == null) {
            return;
        }
        DefaultMutableTreeNode selecNode = (DefaultMutableTreeNode) treeLoaiNuoc.getLastSelectedPathComponent();
        if (selecNode == root) {
            xoaTrangNuoc();
            xoaTrangLN();
            loadDataNuoc();
            return;
        }
        Object selectObject = selecNode.getUserObject();
        if (selectObject instanceof loaiNuoc) {
            txtMaloai.setText(((loaiNuoc) selectObject).getMaLoaiNuoc());
            txtTenLoai.setText(((loaiNuoc) selectObject).getTenLoaiNuoc());
            modelTBNuoc.setRowCount(0);
            for (nuocUong n : nuocUongDAO.layTTNuoc(((loaiNuoc) selectObject).getMaLoaiNuoc())) {
                Vector r = new Vector();
                r.add(n.getMaNuoc());
                r.add(n.getTenNuoc());
                r.add(loaiNuocDAO.timLoaiNuoc(n.getMaLoaiNuoc()).getTenLoaiNuoc());
                r.add(n.getDonGia());
                modelTBNuoc.addRow(r);
                txtMaloai.setEditable(false);
                btnThem.setEnabled(false);
                txtTenLoai.requestFocus();
                xoaTrangNuoc();
            }
        }

    }//GEN-LAST:event_treeLoaiNuocMousePressed

    private void txtGiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiaKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtGiaKeyTyped
    void xoaTrangNuoc() {
        txtMaNuoc.setEditable(true);
        txtMaNuoc.requestFocus();
        txtMaNuoc.setText("");
        txtGia.setText("");
        txtTenNuoc.setText("");
        cbbTenLoaiNuoc.setSelectedIndex(0);
        btnThemNuoc.setEnabled(true);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDongNuoc;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLamMoiNuoc;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSuaNuoc;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemNuoc;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaNuoc;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbTenLoaiNuoc;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbNuoc;
    private javax.swing.JTree treeLoaiNuoc;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaNuoc;
    private javax.swing.JTextField txtMaloai;
    private javax.swing.JTextField txtTenLoai;
    private javax.swing.JTextField txtTenNuoc;
    // End of variables declaration//GEN-END:variables
}
